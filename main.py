import telebot
from telebot import types
from settings import ob


def replace_last_msg_id(chat_id, msg):
    l = clear_file("last_msg_by_id_by_bot.txt")
    file = open("last_msg_by_id_by_bot.txt", "w")
    for i in range(0, len(l)):
        if i != l.index(chat_id) + 1:
            file.write(l[i] + "\n")
        else:
            file.write(msg + "\n")
    file.close()


def replace_dz(dz, lesson):
    l = clear_file("Domashka.txt")
    f = open("Domashka.txt", "w", encoding=("utf-8"))
    for i in range(0, len(l)):
        if i != l.index(lesson) + 1:
            f.write(l[i] + "\n")
        else:
            f.write(dz + "\n")
    f.close()


def send_info_about_lesson(lesson):
    l = clear_file("Domashka.txt")
    if l[l.index(lesson) + 1] == "-":
        if lesson in photos:
            f = open("photos/photos.txt", "r+")
            li = f.readlines()
            li = [i[:len(i) - 1] for i in li]
            f.close()
            if lesson in li:
                return "—Ñ–æ—Ç–æ"
            else:
                return "–Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ"
        else:
            return "–Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ"
    else:
        return f"{l[l.index(lesson) + 1]} \n"


def clear_file(f):
    file = open(f"{f}", 'r+', encoding=("utf-8"))

    m = file.readlines()
    ma = []
    file.close()
    for i in range(0, len(m)):
        if m[i] != '':
            ma.append(m[i][:len(m[i]) - 1])
        else:
            ma.append('')
    return ma


def open_file(file):
    f = open(f"{file}.txt", "r+")
    f_ = f.readlines()
    f_a = [i[:len(i) - 1] for i in f_]
    f.close()
    return f_a


token = '6353183402:AAGcx4MYwwHUgEm4OQvUBBWvh_dCywBkYBc'

was_sended = False
pon = None
waiting_lesson = False
choosen_lesson = None
waiting_key = False
waiting_security_key = False
waiting_ob = False
changing = False

key = None
real_key = 'key_from_using_the_bot_do_not_share_that'

bot = telebot.TeleBot(token)

lessons = ["langs", "algebra", "phisic", "lit_ra", "teoriya_ver", "russ_yaz", "geography",
           "history", "geometry", "biology", "obshestvo", "ITC", "musik"]

languages = ["eng_eng1", "eng_eng2", "nem_eng1", "nem_eng2", "eng_nem", "nem_nem"]
languages_s = ["–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 1", "–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞2 ", "–ù–µ–º.—è–∑ –≥—Ä—É–ø–ø–∞ 1", "–ù–µ–º.—è–∑ –≥—Ä—É–ø–ø–∞ 2", "–ê–Ω–≥–ª.—è–∑", "–ù–µ–º.—è–∑"]

lessons_s = ["–Ø–∑—ã–∫–∏ üåê","–ê–ª–≥–µ–±—Ä–∞ üü∞", "–§–∏–∑–∏–∫–∞ üßë‚Äçüî¨", "–õ–∏—Ç-—Ä–∞ üìñ", "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å üé≤", "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üñãÔ∏è", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è üåç",
             "–ò—Å—Ç–æ—Ä–∏—è ‚è≥", "–ì–µ–æ–º–µ—Ç—Ä–∏—è üìê", "–ë–∏–æ–ª–æ–≥–∏—è ü¶†", "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ üíª", "–ú—É–∑—ã–∫–∞ üé∂"]

photos = ["algebra", "phisic", "teoriya_ver", "russ_yaz", "geography", "geometry", "nem_nem", "eng_nem", "lit_ra", "eng_eng1", "eng_eng2", "nem_eng1", "nem_eng2"]

security_key = "key_from_bot_7b_1488"

@bot.message_handler(commands=["start"])
def start(message):
    base_all = open_file("base")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button = types.KeyboardButton("–ü–æ–Ω")
    markup.add(button)

    if str(message.chat.id) not in base_all:
        bot.send_message(message.chat.id, "–¢–∞–∫ –≤–≤–µ–¥–∏ –∫–ª—é—á –æ—Ç –±–æ—Ç–∞ üîë")
        global waiting_security_key
        waiting_security_key = True
    else:
        bot.send_message(message.chat.id, "–î–∑ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def choose(message):

    base_all = open_file("base")
    can_change_all = open_file("can_change")
    lang_base = open_file("lang_base")

    global name
    global waiting_security_key
    global pon
    global msg
    global waiting_ob

    if str(message.chat.id) not in base_all:
        if not waiting_security_key:
            if message.text not in lessons_s and message.text not in languages_s and message.text != "–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µüìñ" and message.text != "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–º–∞—à–∫–∏üîê" and message.text != "–í –º–µ–Ω—é üîô" and message.text != real_key:
                pon = True
                name = message.text
                print(name)
                base = open('base.txt', "a")
                base.write(str(message.chat.id) + '\n')
                base.write(name + "\n")
                base.close()
                choose(message)
            else:
                bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∏–º—è")

        else:
            global security_key
            if message.text == security_key:
                bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏–º—è")
                waiting_security_key = False
            else:
                bot.send_message(message.chat.id, "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è —Ç—ã –ø–µ—Ä–µ–ø—É—Ç–∞–ª üòë")

    elif str(message.chat.id) not in lang_base:
        if message.text in ["–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 1", "–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 2 (–õ—é–±–æ–≤—å –ë–æ—Ä–∏—Å–æ–≤–Ω–∞)", "–ù–µ–º–µ—Ü.—è–∑"]:
            f = open("lang_base.txt", "a")
            f.write(str(message.chat.id) + "\n")
            m = ["eng1", "eng2", "nem"]
            m2 = ["–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 1", "–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 2 (–õ—é–±–æ–≤—å –ë–æ—Ä–∏—Å–æ–≤–Ω–∞)", "–ù–µ–º–µ—Ü.—è–∑"]
            f.write(m[m2.index(message.text)] + "\n")
            f.close()
            pon = True
            choose(message)

        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            gr1 = types.KeyboardButton("–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 1")
            gr2 = types.KeyboardButton("–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 2 (–õ—é–±–æ–≤—å –ë–æ—Ä–∏—Å–æ–≤–Ω–∞)")
            gr3 = types.KeyboardButton("–ù–µ–º–µ—Ü.—è–∑ ")
            markup.row(gr1, gr2)
            markup.add(gr3)

            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–µ—Ç–µ –≥—Ä—É–ø–ø—É/–æ—Å–Ω–æ–≤–Ω–æ–π —è–∑—ã–∫", reply_markup=markup)

    elif message.text == "–ü–æ–Ω" or pon == True:
        pon = False
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button = types.KeyboardButton("–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µüìñ")
        button2 = types.KeyboardButton("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–º–∞—à–∫–∏üîê")
        button3 = types.KeyboardButton("–û–±—ä—è–≤–ª–µ–Ω–∏–µ üì¢")
        markup.add(button)
        markup.add(button2)
        markup.add(button3)

        bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ–µ –¥–∑ üôÇ", reply_markup=markup)

    elif message.text == "–û–±—ä—è–≤–ª–µ–Ω–∏–µ üì¢":
        if str(message.chat.id) in can_change_all:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button = types.KeyboardButton("–û—Ç–º–µ–Ω–∞")
            markup.add(button)
            bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", reply_markup=markup)
            waiting_ob = True
        else:
            bot.send_message(message.chat.id, "–¢–µ–±–µ –Ω–µ–ª—å–∑—è")
            pon = True
            choose(message)

    elif waiting_ob:
        ob(base_all, message.text, bot)
        bot.send_message(message.chat.id, "–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        pon = True
        choose(message)
        waiting_ob = False

    elif message.text == "–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µüìñ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button = types.KeyboardButton("–Ø–∑—ã–∫–∏ üåê")
        button2 = types.KeyboardButton("–ê–ª–≥–µ–±—Ä–∞ üü∞")
        button3 = types.KeyboardButton("–§–∏–∑–∏–∫–∞ üßë‚Äçüî¨")
        button4 = types.KeyboardButton("–õ–∏—Ç-—Ä–∞ üìñ")
        button5 = types.KeyboardButton("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å üé≤")
        button6 = types.KeyboardButton("–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üñãÔ∏è")
        button7 = types.KeyboardButton("–ì–µ–æ–≥—Ä–∞—Ñ–∏—è üåç")
        button8 = types.KeyboardButton("–ò—Å—Ç–æ—Ä–∏—è ‚è≥")
        button9 = types.KeyboardButton("–ì–µ–æ–º–µ—Ç—Ä–∏—è üìê")
        button10 = types.KeyboardButton("–ë–∏–æ–ª–æ–≥–∏—è ü¶†")
        button11 = types.KeyboardButton("–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ")
        button12 = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ üíª")
        button13 = types.KeyboardButton("–ú—É–∑—ã–∫–∞ üé∂")
        button_exit = types.KeyboardButton("–í –º–µ–Ω—é üîô")

        # lang1 = types.KeyboardButton("–ê–Ω–≥–ª.—è–∑")
        # lang2 = types.KeyboardButton("–ù–µ–º.—è–∑")

        markup.add(button, button_exit)
        # markup.row(lang1, lang2)
        markup.row(button2, button3, button4)
        markup.row(button5, button6, button7)
        markup.row(button8, button9, button10)
        markup.row(button11, button12, button13)

        bot.send_message(message.chat.id, "–ö–∞–∫–æ–π –≤–∞–º –Ω—É–∂–µ–Ω —É—Ä–æ–∫?", reply_markup=markup)

    elif message.text == "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–º–∞—à–∫–∏üîê":
        if str(message.chat.id) in can_change_all:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button = types.KeyboardButton("–Ø–∑—ã–∫–∏ üåê")
            button2 = types.KeyboardButton("–ê–ª–≥–µ–±—Ä–∞ üü∞")
            button3 = types.KeyboardButton("–§–∏–∑–∏–∫–∞ üßë‚Äçüî¨")
            button4 = types.KeyboardButton("–õ–∏—Ç-—Ä–∞ üìñ")
            button5 = types.KeyboardButton("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å üé≤")
            button6 = types.KeyboardButton("–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üñãÔ∏è")
            button7 = types.KeyboardButton("–ì–µ–æ–≥—Ä–∞—Ñ–∏—è üåç")
            button8 = types.KeyboardButton("–ò—Å—Ç–æ—Ä–∏—è ‚è≥")
            button9 = types.KeyboardButton("–ì–µ–æ–º–µ—Ç—Ä–∏—è üìê")
            button10 = types.KeyboardButton("–ë–∏–æ–ª–æ–≥–∏—è ü¶†")
            button11 = types.KeyboardButton("–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ")
            button12 = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ üíª")
            button13 = types.KeyboardButton("–ú—É–∑—ã–∫–∞ üé∂")
            button_exit = types.KeyboardButton("–í –º–µ–Ω—é üîô")
            markup.add(button, button_exit)
            markup.row(button2, button3, button4)
            markup.row(button5, button6, button7)
            markup.row(button8, button9, button10)
            markup.row(button11, button12, button13)

            bot.send_message(message.chat.id, "–ö–∞–∫–æ–π —É—Ä–æ–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫–∏ –±—É–¥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è –ø–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É: ", reply_markup=markup)
            global waiting_lesson
            waiting_lesson = True
        else:
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –∫–ª—é—á!")
            global waiting_key
            waiting_key = True

    elif message.text == "–û—Ç–º–µ–Ω–∞" or message.text == "–í –º–µ–Ω—é üîô":
        waiting_ob = False
        waiting_lesson = False
        pon = True
        choose(message)

    elif message.text == "–î–∞":
        if str(message.chat.id) in can_change_all:
            global changing
            bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –¥–∑")
            changing = True
            waiting_lesson = False

    elif message.text == "–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ":
        global choosen_lesson
        if choosen_lesson in photos:
            bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ")
        else:
            bot.send_message(message.chat.id, "–≠—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–æ—Ç–æ, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫!")

    elif message.text == "–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ":
        if choosen_lesson in photos:
            f = open('photos/photos.txt', 'r+')
            l = f.readlines()
            f.close()
            f = open("photos/photos.txt", "w")
            for i in range(0, len(l)):
                if l[i][:len(l[i]) - 1] != choosen_lesson:
                    f.write(l[i])
                else:
                    continue

            bot.send_message(message.chat.id, "–§–æ—Ç–æ —É–¥–∞–ª–µ–Ω–æ!")
        else:
            bot.send_message(message.chat.id, "–ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ —Å —Ñ–æ—Ç–æ")

    elif message.text == "–£–¥–∞–ª–∏—Ç—å –ø–∏—Å—å–º–µ–Ω–Ω–æ–µ –¥–∑":
        if send_info_about_lesson(choosen_lesson) != "–Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ":
            f = open("Domashka.txt", "r+")
            li = f.readlines()
            li = [i[:len(i) - 1] for i in li]
            f.close()
            f = open("Domashka.txt", 'w')
            for i in range(0, len(li)):
                if i != li.index(choosen_lesson) + 1:
                    f.write(li[i] + "\n")
                else:
                    f.write("-" + "\n")
            f.close()
            bot.send_message(message.chat.id, "–î–∑ —É–¥–∞–ª–µ–Ω–æ")
            pon = True
        else:
            bot.send_message(message.chat.id, "–î–∑ –∏ —Ç–∞–∫ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ")

    elif message.text in languages_s:
        if waiting_lesson:
            choosen_lesson = languages[languages_s.index(message.text)]
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button = types.KeyboardButton("–î–∞")
            button1 = types.KeyboardButton("–û—Ç–º–µ–Ω–∞")
            button2 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –ø–∏—Å—å–º–µ–Ω–Ω–æ–µ –¥–∑")
            ph = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ")
            del_ph = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ")

            if choosen_lesson in photos:
                f = open("photos/photos.txt", "r+")
                b = f.readlines()
                l = [i[:len(i) - 1] for i in b]
                f.close()
                if choosen_lesson in l:
                    photo = open(f"{choosen_lesson}.png", "rb")
                    bot.send_photo(message.chat.id, photo)
            markup.row(button, button1)
            markup.add(button2)
            markup.add(ph, del_ph)

            bot.send_message(message.chat.id, f"–î–∑ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É: {send_info_about_lesson(choosen_lesson)} —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?", reply_markup=markup)
        else:
            choosen_lesson = languages[languages_s.index(message.text)]
            if choosen_lesson in photos:
                f = open("photos/photos.txt", "r+")
                b = f.readlines()
                l = [i[:len(i) - 1] for i in b]
                f.close()
                if choosen_lesson in l:
                    photo = open(f"photos/{choosen_lesson}.png", "rb")
                    bot.send_photo(message.chat.id, photo)
            if send_info_about_lesson(choosen_lesson) != "–Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ":
                bot.send_message(message.chat.id, f"–ü–æ —ç—Ç–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –∑–∞–¥–∞–Ω–æ:\n{send_info_about_lesson(choosen_lesson)}")
            else:
                bot.send_message(message.chat.id, "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –õ–∏–±–æ —É—Ä–æ–∫ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω, –ª–∏–±–æ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ")

    else:
        if waiting_key:
            key = message.text
            if key == real_key:
                change = open("can_change.txt", "a")
                change.write(str(message.chat.id) + "\n")
                change.close()
                bot.send_message(message.chat.id, "–ö–ª—é—á –ø—Ä–∏–Ω—è—Ç ‚úÖ")
            else:
                bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω–æ ‚õî")
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button = types.KeyboardButton("–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µüìñ")
            button2 = types.KeyboardButton("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–º–∞—à–∫–∏üîê")
            markup.add(button)
            markup.add(button2)
            bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ–µ –¥–∑ üôÇ", reply_markup=markup)
            waiting_key = False
        elif waiting_lesson:
            if message.text in lessons_s:
                if message.text != "–Ø–∑—ã–∫–∏ üåê":
                    choosen_lesson = lessons[lessons_s.index(message.text)]
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    button = types.KeyboardButton("–î–∞")
                    button1 = types.KeyboardButton("–û—Ç–º–µ–Ω–∞")
                    button2 = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –ø–∏—Å—å–º–µ–Ω–Ω–æ–µ –¥–∑")
                    ph = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ")
                    del_ph = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ")
                    markup.row(button, button1)
                    markup.add(button2)
                    markup.add(ph, del_ph)
                    bot.send_message(message.chat.id, f"–î–∑ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É: {send_info_about_lesson(choosen_lesson)} —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?", reply_markup=markup)
                    if choosen_lesson in photos:
                        f = open("photos/photos.txt", "r+")
                        b = f.readlines()
                        l = [i[:len(i) - 1] for i in b]
                        f.close()
                        if choosen_lesson in l:
                            photo = open(f"photos/{choosen_lesson}.png", "rb")
                            bot.send_photo(message.chat.id, photo)
                    waiting_lesson = False
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    ang = types.KeyboardButton("–û–°–ù–û–í–ù–û–ô –ê–ù–ì–õ–ò–ô–°–ö–ò–ô")
                    exitm = types.KeyboardButton("–í –º–µ–Ω—é üîô")
                    markup.row(ang, exitm)
                    button = types.KeyboardButton("–ù–µ–º.—è–∑ –≥—Ä—É–ø–ø–∞ 1")
                    button2 = types.KeyboardButton("–ù–µ–º.—è–∑ –≥—Ä—É–ø–ø–∞ 2")
                    button3 = types.KeyboardButton("–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 1")
                    button4 = types.KeyboardButton("–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 2")
                    markup.row(button, button2, button3, button4)
                    nem = types.KeyboardButton("–û–°–ù–û–í–ù–û–ô –ù–ï–ú–ï–¶–ö–ò–ô")
                    markup.add(nem)
                    button5 = types.KeyboardButton("–ù–µ–º.—è–∑")
                    button6 = types.KeyboardButton("–ê–Ω–≥–ª.—è–∑")
                    markup.row(button5, button6)
                    bot.send_message(message.chat.id, "–Ø–∑—ã–∫–∏", reply_markup=markup)
                    waiting_lesson = True

        elif changing:
            if choosen_lesson != None:
                replace_dz(message.text, choosen_lesson)
                print(choosen_lesson)
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                button = types.KeyboardButton("–û–ö")
                markup.add(button)
                bot.send_message(message.chat.id, "–î–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ", reply_markup=markup)
                pon = True
            else:
                bot.send_message(message.chat.id, "–ù–µ –≤—ã–±—Ä–∞–Ω –ø—Ä–µ–¥–º–µ—Ç")
            changing = False

        else:
            if message.text in lessons_s:
                if message.text != "–Ø–∑—ã–∫–∏ üåê":
                    choosen_lesson = lessons[lessons_s.index(message.text)]
                    if send_info_about_lesson(choosen_lesson) != "–Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ":
                        bot.send_message(message.chat.id, f"–ü–æ —ç—Ç–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –∑–∞–¥–∞–Ω–æ:\n{send_info_about_lesson(choosen_lesson)}")
                        if choosen_lesson in photos:
                            f = open("photos/photos.txt", "r+")
                            b = f.readlines()
                            l = [i[:len(i) - 1] for i in b]
                            f.close()
                            if choosen_lesson in l:
                                photo = open(f"photos/{choosen_lesson}.png", "rb")
                                bot.send_photo(message.chat.id, photo)
                    else:
                        bot.send_message(message.chat.id, "–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –õ–∏–±–æ —É—Ä–æ–∫ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω, –ª–∏–±–æ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–¥–∞–Ω–æ")
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    ang = types.KeyboardButton("–û–°–ù–û–í–ù–û–ô –ê–ù–ì–õ–ò–ô–°–ö–ò–ô")
                    exitm = types.KeyboardButton("–í –º–µ–Ω—é üîô")
                    markup.add(exitm)
                    markup.add(ang)
                    button = types.KeyboardButton("–ù–µ–º.—è–∑ –≥—Ä—É–ø–ø–∞ 1")
                    button2 = types.KeyboardButton("–ù–µ–º.—è–∑ –≥—Ä—É–ø–ø–∞ 2")
                    button3 = types.KeyboardButton("–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 1")
                    button4 = types.KeyboardButton("–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 2")
                    markup.row(button, button2, button3, button4)
                    nem = types.KeyboardButton("–û–°–ù–û–í–ù–û–ô –ù–ï–ú–ï–¶–ö–ò–ô")
                    markup.add(nem)
                    button5 = types.KeyboardButton("–ù–µ–º.—è–∑")
                    button6 = types.KeyboardButton("–ê–Ω–≥–ª.—è–∑")
                    markup.row(button5, button6)
                    bot.send_message(message.chat.id, "–Ø–∑—ã–∫–∏", reply_markup=markup)

@bot.message_handler(content_types=['photo'])
def photo(message):
    global msg
    global choosen_lesson
    if choosen_lesson in photos:
        file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = '/Users/EI/PycharmProjects/tgdzbot/' + f"{choosen_lesson}.png"
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        f = open("photos/photos.txt", "r+")
        l = f.readlines()
        f.close()
        f = open("photos/photos.txt", "w+")
        f.write(choosen_lesson + "\n")
        for i in range(0, len(l)):
            if l[i][:len(l[i]) - 1] != choosen_lesson:
                f.write(l[i])
            else:
                continue
        bot.send_message(message.chat.id, "–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
        print(choosen_lesson)
    else:
        bot.send_message(message.chat.id, "–ø–∂ –Ω–µ –Ω–∞–¥–∞ —Ç–∞–∫ –¥–µ–ª–∞—Ç—å")


bot.infinity_polling()
