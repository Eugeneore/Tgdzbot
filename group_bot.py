import telebot
from telebot import types
from settings import *
import time

token = '6959560969:AAFPQti8yRx7ijfwPi-d17K7ydXQc5ALFlA'

bot = telebot.TeleBot(token)

key = 'Groupbotkey1488'

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞–ø–∏—à–∏—Ç–µ /help")


@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, "/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Å–ª–æ–º–∞–ª—Å—è\n/dz - –¥–∑ –ø–æ –≤—Å–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞–º(–ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)\n /dzt - –¥–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞(–ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)\n/rasp - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n/mute - –∑–∞–º—É—Ç–∏—Ç—å\n/unmute - —Ä–∞–∑–º—É—Ç–∏—Ç—å\n/kick - —É–¥–∞–ª–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞\n–≤—Å—ë –º–Ω–µ –ª–µ–Ω—å –±–æ–ª—å—à–µ –ø–∏—Å–∞—Ç—åüë∫")


@bot.message_handler(commands=['rasp'])
def rasp1(message):
    bot.send_message(message.chat.id, rasp)


@bot.message_handler(commands=['kick'])
def kick_user(message):
    print(message)
    if message.reply_to_message or message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        sender_status = bot.get_chat_member(chat_id, message.from_user.id).status
        admins = open_file('groupbotadminlist')
        if sender_status == "administrator" or sender_status == 'creator' or str(message.chat.id) in admins:
            if user_status == 'administrator' or user_status == 'creator' or message.reply_to_message.from_user.is_bot or str(message.chat.id) in admins:
                bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫–∏–∫–Ω—É—Ç—å")
            else:
                bot.kick_chat_member(chat_id, user_id)
                bot.reply_to(message, f"{message.reply_to_message.from_user.username} –∫–∏–∫–Ω—É–ª–∏")
    else:
        bot.reply_to(message.chat.id, "–ù–∞–¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Å—ã–ª–∞—è —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–∞")


@bot.message_handler(commands=['mute'])
def mute_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        sender_status = bot.get_chat_member(chat_id, message.from_user.id).status
        admins = open_file('groupbotadminlist')
        if sender_status == "administrator" or sender_status == 'creator' or str(message.chat.id) in admins:
            if user_status == 'creator':
                bot.reply_to(message, "–≠—Ç–æ –∞–¥–º–∏–Ω...")
            else:
                duration = 60
                args = message.text.split()[1:]
                if args:
                    try:
                        duration = int(args[0])
                    except ValueError:
                        bot.reply_to(message, "–û—à–∏–±–∫–∞")
                        return

                    if duration < 1 or duration > 1440:
                        bot.reply_to(message, "–í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –∏ –Ω–µ –±–æ–ª—å—à–µ 1 –¥–Ω—è")
                        return

                bot.restrict_chat_member(chat_id, user_id, until_date=time.time() + duration * 60)
                bot.reply_to(message, f"–ë—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ {duration} –º–∏–Ω—É—Ç")
        else:
            bot.send_message(message.chat.id, "–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç")
    else:
        bot.reply_to(message, "–ù–∞–¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Å—ã–ª–∞—è —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–∞")


@bot.message_handler(commands=['unmute'])
def unmute_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        sender_status = bot.get_chat_member(chat_id, message.from_user.id).status
        admins = open_file('groupbotadminlist')
        if sender_status == "administrator" or sender_status == 'creator' or str(message.chat.id) in admins:
            bot.restrict_chat_member(chat_id, user_id, can_send_messages=True, can_send_media_messages=True, can_send_other_messages=True, can_add_web_page_previews=True)
            bot.reply_to(message, f"{message.reply_to_message.from_user.username} —Ä–∞–∑–º—É—á–µ–Ω")
    else:
        bot.reply_to(message, "–ù–∞–¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–∞")


@bot.message_handler(commands=['dz'])
def dz(message):
    msg = "–î–∑:\n"
    for i in range(0, len(lessons_technik)):
        if send_info_about_lesson(lessons_technik[i]) != "–Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ":
            msg += lessons_technik_s[i] + f": {send_info_about_lesson(lessons_technik[i])}\n"
        else:
            msg += lessons_technik_s[i] + ": –Ω–µ—Ç\n"
    msg += "–ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ —Ñ–æ—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –±–æ—Ç–µ"
    bot.send_message(message.chat.id, msg)


@bot.message_handler(commands=['dzt'])
def dzt(message):
    bot.send_message(message.chat.id, "–ë–†–ê–í–õ –°–¢–†–ê–° –ö–ê–í–ù–û")


@bot.message_handler(content_types=['text'])
def answer(message):
    if "–°–∫–∏–Ω—Ç—å–µ" in message.text or "—Å–∫–∏–Ω—å—Ç–µ" in message.text:
        bot.send_message(message.chat.id, "—Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –¥–ª—è –ª–æ—Ö–æ–≤")

    else:
        for i in ["–ø–∏–∑–¥", "–±–ª—è", "–ü–∏–∑–¥", "–ë–ª—è", "–ë–õ–Ø", "—Ö—É–π"]:
            if i in message.text:
                bot.send_message(message.chat.id, "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –º–∞—Ç! –∑–∞–º—É—á—É!")
                bot.delete_message(message.chat.id, message.id)


bot.infinity_polling()