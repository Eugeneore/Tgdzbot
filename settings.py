def replace_in_file(replacing, after, file):
    l = open_file(f"{file}")
    f = open(f"{file}.txt", "w")
    for i in range(0, len(l)):
        if i != l.index(after) + 1:
            f.write(l[i] + "\n")
        else:
            f.write(replacing + "\n")
    f.close()


def open_file(file):
    f = open(f"{file}.txt", "r+")
    f_ = f.readlines()
    f_a = [i[:len(i) - 1] for i in f_]
    f.close()
    return f_a


def clear_file(f):
    file = open(f"{f}", 'r+')

    m = file.readlines()
    ma = []
    file.close()
    for i in range(0, len(m)):
        if m[i] != '':
            ma.append(m[i][:len(m[i]) - 1])
        else:
            ma.append('')
    return ma


def add_to_file(text, file):
    f = open(f"{file}", "a")
    f.write(text)
    f.close()


def send_info_about_lesson(lesson):
    l = clear_file("Domashka.txt")
    l.append('')
    if l[l.index(lesson) + 1] == "-":
        if lesson in photos:
            f = open("photos/photos.txt", "r+")
            li = f.readlines()
            li = [i[:len(i) - 1] for i in li]
            f.close()
            if lesson in li:
                return "—Ñ–æ—Ç–æ\n"
            else:
                return "–Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ"
        else:
            return "–Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ"
    else:
        return f"{l[l.index(lesson) + 1]} \n"


def ob(base, text, bot):
    for i in range(0, len(base)):
        if i % 2 == 0:
            try:
                bot.send_message(base[i], text)
            except:
                pass


def ob_photo(base, bot):
    for i in range(0, len(base)):
        if i % 2 == 0:
            try:
                photo = open(f"ob.png", "rb")
                bot.send_photo(base[i], photo)
            except:
                pass


token = '6353183402:AAGcx4MYwwHUgEm4OQvUBBWvh_dCywBkYBc'
real_key = 'key_from_using_the_bot_do_not_share_that'
security_key = "key_from_bot_7b_1488"

lessons_technik = ["algebra", "phisic", "lit_ra", "teoriya_ver", "russ_yaz", "geography", "history", "geometry", "biology", "obshestvo", "ITC", "musik", "eng_eng1", "eng_eng2", "nem_eng1", "nem_eng2", "eng_nem", "nem_nem"] #18
lessons_technik_s = ["–ê–ª–≥–µ–±—Ä–∞", "–§–∏–∑–∏–∫–∞", "–õ–∏—Ç-—Ä–∞", "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å", "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–ò—Å—Ç–æ—Ä–∏—è", "–ì–µ–æ–º–µ—Ç—Ä–∏—è", "–ë–∏–æ–ª–æ–≥–∏—è", "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–ú—É–∑—ã–∫–∞",
                     "–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 1", "–ê–Ω–≥–ª.—è–∑ –≥—Ä—É–ø–ø–∞ 2", "–ù–µ–º.—è–∑ –≥—Ä—É–ø–ø–∞ 1", "–ù–µ–º.—è–∑ –≥—Ä—É–ø–ø–∞ 2", "–ê–Ω–≥–ª.—è–∑ –Ω–µ–º—Ü—ã", "–ù–µ–º.—è–∑ –Ω–µ–º—Ü—ã"] #18

lessons = ["algebra", "phisic", "lit_ra", "teoriya_ver", "russ_yaz", "geography", "history", "geometry", "biology", "obshestvo", "ITC", "musik", "eng", "nem"]
lessons_s = ["–ê–ª–≥–µ–±—Ä–∞ üü∞", "–§–∏–∑–∏–∫–∞ üßë‚Äçüî¨", "–õ–∏—Ç-—Ä–∞ üìñ", "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å üé≤", "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üñãÔ∏è", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è üåç", "–ò—Å—Ç–æ—Ä–∏—è ‚è≥", "–ì–µ–æ–º–µ—Ç—Ä–∏—è üìê", "–ë–∏–æ–ª–æ–≥–∏—è ü¶†", "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ üíª", "–ú—É–∑—ã–∫–∞ üé∂", "–ê–Ω–≥–ª.—è–∑", "–ù–µ–º.—è–∑"]

groups_s = ["–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ –≥—Ä—É–ø–ø–∞ 1 (–•—Ä–∞–º–æ–≤–∞)", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ –≥—Ä—É–ø–ø–∞ 2 (–õ—é–±–æ–≤—å –ë–æ—Ä–∏—Å–æ–≤–Ω–∞)", "–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫"]
groups = ["eng1", "eng2", "nem"]

photos = ["algebra", "phisic", "teoriya_ver", "russ_yaz", "geography", "geometry", "nem_nem", "eng_nem", "lit_ra", "eng_eng1", "eng_eng2", "nem_eng1", "nem_eng2"]

rasp = "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:\n" \
       "–ò–Ω.—è–∑. 1\n" \
       "–†–∞–∑–≥–æ–≤–æ—Ä—ã –æ –≤–∞–∂–Ω–æ–º\n" \
       "–ò–Ω.—è–∑. 1\n" \
       "–ê–ª–≥–µ–±—Ä–∞\n" \
       "–§–∏–∑–∏–∫–∞\n" \
       "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è\n" \
       "–§–∏–∑-—Ä–∞\n\n" \
       "–í—Ç–æ—Ä–Ω–∏–∫:\n" \
       "–ò–Ω.—è–∑. 1\n" \
       "–õ–∏—Ç-—Ä–∞\n" \
       "–¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏\n" \
       "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫\n" \
       "–ê–ª–≥–µ–±—Ä–∞\n" \
       "–ò–Ω.—è–∑. 2\n" \
       "–§–∏–∑–∏–∫–∞\n\n" \
       "–°—Ä–µ–¥–∞:\n" \
       "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è\n" \
       "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è\n" \
       "–ò–ó–û\n" \
       "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫\n" \
       "–ò–Ω.—è–∑ 2\n" \
       "–ò—Å—Ç–æ—Ä–∏—è\n\n" \
       "–ß–µ—Ç–≤–µ—Ä–≥:\n" \
       "–ê–ª–≥–µ–±—Ä–∞\n" \
       "–ì–µ–æ–º–µ—Ç—Ä–∏—è\n" \
       "–ë–∏–æ–ª–æ–≥–∏—è\n" \
       "–û–±—â–µ—Å—Ç–≤–æ\n" \
       "–§–∏–∑-—Ä–∞\n" \
       "–ò–Ω.—è–∑. 1\n" \
       "–ü—Ä–æ—Ñ. –æ—Ä–∏–µ–Ω—Ç.\n\n" \
       "–ü—è—Ç–Ω–∏—Ü–∞:\n" \
       "–õ–∏—Ç-—Ä–∞\n" \
       "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫\n" \
       "–ò—Å—Ç–æ—Ä–∏—è\n" \
       "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞\n" \
       "–ò–Ω.—è–∑. 1\n\n" \
       "–°—É–±–±–æ—Ç–∞:\n" \
       "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫\n" \
       "–ì–µ–æ–º–µ—Ç—Ä–∏—è\n" \
       "–ú—É–∑—ã–∫–∞\n" \
       "–ê–ª–≥–µ–±—Ä–∞\n" \
       "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è"
